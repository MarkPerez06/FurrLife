@using FurrLife.Static
@using Microsoft.AspNetCore.Identity
@model IEnumerable<Appointments>
@{
    ViewBag.Title = "Consultations";
    ViewBag.pTitle = "Consultations";
    ViewBag.pageTitle = "Maintenance";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    var vetUsers = ViewBag.vetUsers as List<IdentityUser>;

    var _userManager = Context.RequestServices.GetRequiredService<UserManager<IdentityUser>>();
    var user = await _userManager.FindByNameAsync(User.Identity?.Name);
    var userId = user.Id;
    var UserRoleId = user.SecurityStamp;

    var openSchedule = ViewBag.openSchedule as List<Appointments>;
}
<!-- DataTables -->
<link href="~/assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />
<link href="~/assets/libs/datatables.net-buttons-bs4/css/buttons.bootstrap4.min.css" rel="stylesheet" type="text/css" />
<!-- Responsive datatable examples -->
<link href="~/assets/libs/datatables.net-responsive-bs4/css/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />
<link href="~/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="mb-3">
                            <select id="ScheduleId" class="form-control" name="ScheduleId">
                                <option value="0">- Select Schedule -</option>
                                @foreach (var item in openSchedule)
                                {
                                    if (item.Start.ToString("MMM. dd, yyyy") == item.End.ToString("MMM. dd, yyyy"))
                                    {
                                        <option value="@item.Id"> @item.Start.ToString("MMM. dd, yyyy") (@item.Start.ToString("hhhh:mmtt") - @item.End.ToString("hhhh:mmtt"))</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Id"> @item.Start.ToString("MMM. dd, yyyy") (@item.Start.ToString("hhhh:mmtt")) - @item.End.ToString("MMM. dd, yyyy") (@item.End.ToString("hhhh:mmtt"))</option>
                                    }

                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <button class="btn btn-primary" onclick="AddConsultation()">
                            Schedule a Consultation
                        </button>
                    </div>
                    <div class="col-md-4">
                    </div>
                </div>
                <table id="datatable-buttons" class="table table-bordered table-striped dt-responsive nowrap w-100">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Type</th>
                            <th>Start</th>
                            <th>End</th>
                            <th>Category</th>
                            <th>Veterinarian</th>
                            <th class="text-center" style="table-layout: fixed;">
                                @if (UserRoleId != UserRoles.Customer.Id)
                                {
                                    <a onclick="Create()" class="btn btn-primary waves-effect waves-light btn-sm" data-bs-toggle="modal" data-bs-target="#CreateUpdateModal">Create</a>
                                }
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var Count = 0;
                        }
                        @foreach (var item in Model)
                        {
                            Count++;
                            <tr>
                                <td>@Count.</td>
                                <td>@item.Title</td>
                                <td>@item.Start.ToString("MMM. dd, yyyy - hhhh:mmtt")</td>
                                <td>@item.End.ToString("MMM. dd, yyyy - hhhh:mmtt")</td>
                                <td>
                                    @if (item.IsAllDay)
                                    {
                                        <span class="badge bg-success rounded-pill p-1">All Day</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-info rounded-pill p-1">Time</span>
                                    }
                                </td>
                                <td>
                                    @vetUsers.Where(m => m.Id == item.UserId).FirstOrDefault().UserName
                                </td>
                                <td class="text-center">
                                    @if (item.CusUserId == null || item.CusUserId == "")
                                    {
                                        <a href="#" onclick="Edit(@item.Id)" class="btn btn-success waves-effect waves-light btn-sm" data-bs-toggle="modal" data-bs-target="#CreateUpdateModal">
                                            Edit
                                        </a>
                                        <a href="#" onclick="Delete(@item.Id)" class="btn btn-danger waves-effect waves-light btn-sm">
                                            Delete
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="~/Chat?AppointmentId=@item.Id" target="_blank" class="btn btn-info waves-effect waves-light btn-sm">
                                            Chat
                                        </a>
                                        <a href="~/OnlineConsultation?ConsultationId=@item.Id" target="_blank" class="btn btn-primary waves-effect waves-light btn-sm">
                                            Call
                                        </a>

                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div> <!-- end col -->
</div> <!-- end row -->

<div id="CreateUpdateModal" class="modal fade" tabindex="-1" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalTitle"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form class="needs-validation" novalidate>
                    <div class="row">
                        <div hidden>
                            <input id="Id" type="text" class="form-control" value="0">
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="CalendarId" class="form-label">Type</label>
                                <select id="CalendarId" class="form-control" required>
                                    <option value="">- Select Type -</option>
                                    @*     <option value="1">Store Appointment</option> *@
                                    <option value="2">Online Consultation</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="Start" class="form-label">Start</label>
                                <input id="Start" placeholder="Start" type="datetime-local" class="form-control" required>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="End" class="form-label">End</label>
                                <input id="End" placeholder="End" type="datetime-local" class="form-control" required>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="IsAllDay">Category</label>
                                <select id="IsAllDay" class="form-control" required>
                                    <option value="">- Select Category -</option>
                                    <option value="true">All Day</option>
                                    <option value="false">Time</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="Veterinarian">Veterinarian</label>
                                <select id="UserId" class="form-control" name="Veterinarian">
                                    <option value="">- Select Veterinarian -</option>
                                    @foreach (var item in vetUsers)
                                    {
                                        <option value="@item.Id">@item.UserName</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary waves-effect" data-bs-dismiss="modal">Close</button>
                        <button onclick="SaveForm()" type="button" class="btn btn-primary waves-effect waves-light">Save changes</button>
                    </div>
                </form>
            </div>

        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- JAVASCRIPT -->
<script src="~/assets/libs/jquery/jquery.min.js"></script>
<script src="~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/assets/libs/metismenu/metisMenu.min.js"></script>
<script src="~/assets/libs/simplebar/simplebar.min.js"></script>
<script src="~/assets/libs/node-waves/waves.min.js"></script>


<!-- Required datatable js -->
<script src="~/assets/libs/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="~/assets/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>
<!-- Buttons examples -->
<script src="~/assets/libs/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
<script src="~/assets/libs/datatables.net-buttons-bs4/js/buttons.bootstrap4.min.js"></script>
<script src="~/assets/libs/jszip/jszip.min.js"></script>
<script src="~/assets/libs/pdfmake/build/pdfmake.min.js"></script>
<script src="~/assets/libs/pdfmake/build/vfs_fonts.js"></script>
<script src="~/assets/libs/datatables.net-buttons/js/buttons.html5.min.js"></script>
<script src="~/assets/libs/datatables.net-buttons/js/buttons.print.min.js"></script>
<script src="~/assets/libs/datatables.net-buttons/js/buttons.colVis.min.js"></script>

<!-- Responsive examples -->
<script src="~/assets/libs/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
<script src="~/assets/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"></script>

<!-- Datatable init js -->
<script src="~/assets/js/pages/datatables.init.js"></script>

<!-- App js -->
<script src="~/assets/js/pages/modal.init.js"></script>
<script src="~/assets/libs/parsleyjs/parsley.min.js"></script>
<script src="~/assets/js/pages/form-validation.init.js"></script>
<!-- Sweet Alerts js -->
<script src="~/assets/libs/sweetalert2/sweetalert2.min.js"></script>

<!-- Sweet alert init js-->
<script src="~/assets/js/pages/sweet-alerts.init.js"></script>

<script src="~/assets/js/app.js"></script>
<script>

    function AddConsultation() {
        var ScheduleId = $("#ScheduleId").val();
        if (ScheduleId != null && ScheduleId != "") {
            Swal.fire({
                title: 'Schedule Consultation!',
                text: 'Are you sure you want to Schedule Consultation?',
                icon: 'info',
                showCancelButton: true,
                confirmButtonText: 'Done',
                cancelButtonText: 'Back',
                allowOutsideClick: false,
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("AddConsultation", "Appointments")',
                        type: 'POST',
                        data: {
                            ScheduleId: ScheduleId,
                        },
                        success: function (data) {
                            Swal.fire({
                                title: "Success!",
                                text: 'Consultation was successfully added!',
                                icon: 'success',
                                showCancelButton: false,
                                allowOutsideClick: false,
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '@Url.Action("Consultation", "Appointments")';
                                }
                            });
                        },
                        error: function (error) {
                            Swal.fire('Oops!', 'Something went wrong!', 'error');
                        }
                    });
                }
            });
        } else {
            Swal.fire('Invalid!', 'Please select the Consultation Schedule!', 'info');
        }
    }



    var ID = $("#id").val();

    function convertDateTimeToDate(dateTime) {
        var date = new Date(dateTime);
        var day = date.getDate();
        var month = date.getMonth() + 1; // Months are zero-based
        var year = date.getFullYear();

        // Pad single-digit day and month with leading zeros
        var formattedDay = day < 10 ? '0' + day : day;
        var formattedMonth = month < 10 ? '0' + month : month;
        var formattedDate = year + '-' + formattedMonth + '-' + formattedDay;
        return formattedDate;
    }

    function SaveForm() {
        var data = {
            Id: ID,
            CalendarId: $("#CalendarId").val(),
            Start: $("#Start").val(),
            End: $("#End").val(),
            IsAllDay: $("#IsAllDay").val(),
            UserId: $("#UserId").val()
        };
        if (data.CalendarId != "" && data.Start != "" && data.End != "" && data.UserId != "" && data.IsAllDay != "") {
            $.ajax({
                url: '@Url.Action("Save", "Appointments")',
                type: 'POST',
                data: data,
                success: function (data) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Record was successfully saved!',
                        icon: 'success',
                        showCancelButton: false,
                        allowOutsideClick: false,
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '@Url.Action("Consultation", "Appointments")';
                        }
                    });
                },
                error: function (error) {
                    Swal.fire('Oops!', 'Something went wrong!', 'error');
                }
            });
        }
    }

    function Create() {
        ID = 0;
        $("#ModalTitle").text("Create Consultations").trigger("change");
    }
    function Edit(Id) {
        $("#ModalTitle").text("Update Consultations").trigger("change");

        ID = Id;
        var data = {
            Id: Id,
        };
        if (data.Title != "" && data.Start != "" && data.End != "" && data.UserId != "" && data.IsAllDay != "") {
            $.ajax({
                url: '@Url.Action("Edit", "Appointments")',
                type: 'POST',
                data: data,
                dataType: 'json',
                success: function (result) {
                    $("#Id").val(Id).trigger("change");
                    $("#Title").val(result.title).trigger("change");
                    $("#Start").val(result.start).trigger("change");
                    $("#End").val(result.end).trigger("change");
                    $("#IsAllDay").val(result.isAllDay).trigger("change");
                    $("#UserId").val(result.userId).trigger("change");
                },
                error: function (error) {
                    Swal.fire('Oops!', 'Something went wrong!', 'error');
                }
            });
        }
    }
    function Delete(Id) {
        ID = Id;
        var data = {
            Id: Id,
        };

        Swal.fire({
            title: 'Are you sure?',
            text: 'You won\'t be able to revert this!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel',
            allowOutsideClick: false,
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("Delete", "Appointments")',
                    type: 'POST',
                    data: data,
                    success: function (data) {
                        Swal.fire({
                            title: 'Deleted!',
                            text: 'Record was successfully deleted!',
                            icon: 'success',
                            showCancelButton: false,
                            allowOutsideClick: false,
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '@Url.Action("Consultation", "Appointments")';
                            }
                        });
                    },
                    error: function (error) {
                        Swal.fire('Oops!', 'Something went wrong!', 'error');
                    }
                });

            } else if (result.dismiss === Swal.DismissReason.cancel) {
                Swal.fire('Cancelled!', 'Your record is safe!', 'error');
            }
        });
    }
</script>
